<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coverage on A Place for Poor Examples</title>
    <link>https://blog.mattblair.co/tags/coverage/</link>
    <description>Recent content in Coverage on A Place for Poor Examples</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 04 Dec 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.mattblair.co/tags/coverage/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Code coverage for CoffeeScript and JavaScript without pre-compiling</title>
      <link>https://blog.mattblair.co/blog/20141204-gulp-coffee-istanbul/</link>
      <pubDate>Thu, 04 Dec 2014 00:00:00 +0000</pubDate>
      <guid>https://blog.mattblair.co/blog/20141204-gulp-coffee-istanbul/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;re not aware of your code coverage when building a serious application, you&amp;rsquo;re not building a serious app.&lt;/p&gt;&#xA;&lt;p&gt;So I love &lt;a href=&#34;https://github.com/gotwarlost/istanbul&#34;&gt;istanbul&lt;/a&gt; and &lt;a href=&#34;https://github.com/SBoudrias/gulp-istanbul&#34;&gt;gulp-istanbul&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;One problem - you have to compile your CoffeeScript, then point you tests at the compiled assets to get coverage metrics.&lt;/p&gt;&#xA;&lt;p&gt;Not anymore. Introducing &lt;a href=&#34;https://github.com/duereg/gulp-coffee-istanbul&#34;&gt;gulp-coffee-istanbul&lt;/a&gt;. This allows in place CoffeeScript test coverage.&lt;/p&gt;&#xA;&lt;p&gt;Have tests in coffee? Great. Have tests in JS? Great too. Same with your dependencies - it&amp;rsquo;ll take both, in place, and run coverage.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

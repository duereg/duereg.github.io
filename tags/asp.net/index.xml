<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ASP.NET on A Place for Poor Examples</title>
    <link>https://blog.mattblair.co/tags/asp.net/</link>
    <description>Recent content in ASP.NET on A Place for Poor Examples</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 26 Apr 2012 00:00:00 -0700</lastBuildDate>
    
	<atom:link href="https://blog.mattblair.co/tags/asp.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Posting an IEnumerable of Interfaces back from your Views by extending the DefaultModelBinder</title>
      <link>https://blog.mattblair.co/blog/20120426-posting-an-ienumerable-of-interfaces-back-from-your-views-by-extending-the-defaultmodelbinder/</link>
      <pubDate>Thu, 26 Apr 2012 00:00:00 -0700</pubDate>
      
      <guid>https://blog.mattblair.co/blog/20120426-posting-an-ienumerable-of-interfaces-back-from-your-views-by-extending-the-defaultmodelbinder/</guid>
      <description>Please note I came across a bug in the code, and revised this post on 31/07/2012.
 Came across an interesting problem today. In ASP.Net MVC, you can easily pass an enumerable of interfaces to your views from your controllers. As long as you have DisplayTemplates and EditorTemplates defined for the subclasses, then those classes will be rendered correctly from your enumerable of the parent interfaces.
However, if you then POST to a controller method that accepts an IEnumerable, you&amp;rsquo;ll get the error message:</description>
    </item>
    
    <item>
      <title>Enable/Disable jQuery buttons in Knockout with a Custom Binding Handler</title>
      <link>https://blog.mattblair.co/blog/20111021-enabledisable-jquery-buttons-in-knockout-with-a-custom-binding-handler/</link>
      <pubDate>Fri, 21 Oct 2011 00:00:00 -0700</pubDate>
      
      <guid>https://blog.mattblair.co/blog/20111021-enabledisable-jquery-buttons-in-knockout-with-a-custom-binding-handler/</guid>
      <description>Still working on those jQuery buttons. Trying to update old ASP.Net Webforms using jQuery, Knockout, and Amplify.
New problem today.
I was having problems getting Knockout to enable/disable my jQuery buttons using the Knockout &amp;lsquo;enable&amp;rsquo; bindingHandler. It would enable/disable the underlying element that I had run the .button() method on, but it had no idea about the div that jQuery had wrapped my element in, or how to handle it.</description>
    </item>
    
    <item>
      <title>Auto Creation of jQuery Buttons using Knockout Templates</title>
      <link>https://blog.mattblair.co/blog/20111019-auto-creation-of-jquery-buttons-using-knockout-templates/</link>
      <pubDate>Wed, 19 Oct 2011 00:00:00 -0700</pubDate>
      
      <guid>https://blog.mattblair.co/blog/20111019-auto-creation-of-jquery-buttons-using-knockout-templates/</guid>
      <description>While converting ASP.NET Webforms to be more clienty using HTML 5, Knockout, and jQuery, I came across a problem.
I want to use jQuery buttons on my Knockout-rendered rows, but whenever a new row gets added via a template, the buttons were not created as jQuery buttons. The issue was that I was calling a method to create the buttons after the page was fully rendered but never again. All the new rows wouldn&amp;rsquo;t have the .</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>commit on A Place for Poor Examples</title>
    <link>https://blog.mattblair.co/tags/commit/</link>
    <description>Recent content in commit on A Place for Poor Examples</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 16 Feb 2015 00:00:00 -0800</lastBuildDate>
    
	<atom:link href="https://blog.mattblair.co/tags/commit/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Replaying changes from one git branch onto another</title>
      <link>https://blog.mattblair.co/blog/20150216-git-rebasing-without-rebasing/</link>
      <pubDate>Mon, 16 Feb 2015 00:00:00 -0800</pubDate>
      
      <guid>https://blog.mattblair.co/blog/20150216-git-rebasing-without-rebasing/</guid>
      <description>Or rebasing without rebasing Where I work, we use git (like everyone else), and we follow this common pattern for development:
 Create a feature branch off of master Work on your feature in the branch When getting ready to submit a Pull Request, squash your commits Rebase master against your branch Open PR Get feedback After feedback corrected (if present), merge branch into master  Pretty standard practice. 99% of the time, this is a frictionless process.</description>
    </item>
    
  </channel>
</rss>
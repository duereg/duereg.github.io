<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Project on A Place for Poor Examples</title>
    <link>https://blog.mattblair.co/tags/project/</link>
    <description>Recent content in Project on A Place for Poor Examples</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 02 Mar 2023 17:31:07 -0800</lastBuildDate><atom:link href="https://blog.mattblair.co/tags/project/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Moving between tech stacks</title>
      <link>https://blog.mattblair.co/blog/20230302-changing-stacks/</link>
      <pubDate>Thu, 02 Mar 2023 17:31:07 -0800</pubDate>
      
      <guid>https://blog.mattblair.co/blog/20230302-changing-stacks/</guid>
      <description>When it comes to software engineering roles, experience in the tech stack you&amp;rsquo;re going to be working in is valuable but not specifically required. A good engineer can ramp up and learn new stacks. However, someone experienced in the tech stack can contribute quickly to key development initiatives, while also bringing outside experience using the stack.
But which tech stacks are easier to move between, and which ones are the hardest?</description>
    </item>
    
    <item>
      <title>Promoting Technical Excellence in your Organization</title>
      <link>https://blog.mattblair.co/blog/20230208-technical-excellence/</link>
      <pubDate>Tue, 21 Feb 2023 17:31:07 -0800</pubDate>
      
      <guid>https://blog.mattblair.co/blog/20230208-technical-excellence/</guid>
      <description>I was speaking to a friend who works at a startup with a team of around 14 engineers. 80% of them are mid level engineers with 3-4 years of experience. They all work in product squads covering specific areas.
These have lost momentum in the development and they are seeing 2 key problems:
 The teams lacks direction on where to focus their energy and prefer tackling small issues as they don&amp;rsquo;t have a vision as to what impactful engineering initiatives to do.</description>
    </item>
    
    <item>
      <title>Mentorship Proposal</title>
      <link>https://blog.mattblair.co/blog/20221212-tech-team-expanded/</link>
      <pubDate>Tue, 31 Jan 2023 15:30:12 -0800</pubDate>
      
      <guid>https://blog.mattblair.co/blog/20221212-tech-team-expanded/</guid>
      <description>Note: This is a proposal I put together with one of the engineers in my organization for a peer-directed mentorship program. I&amp;rsquo;ve removed names and fudged numbers but I hope it will serve as a valuable template. All other numbers quoted here are from outside studies, with links to the studies provided.
Peer Mentorship Proposal The most valuable asset of a company are its employees.
Among top reasons for millennials wanting to quit their jobs are &amp;lsquo;Not enough opportunities to advance&amp;rsquo; at 35% and &amp;lsquo;Lack of learning and development opportunities&amp;rsquo; at 28%.</description>
    </item>
    
    <item>
      <title>Technical State of the Team - Expanded</title>
      <link>https://blog.mattblair.co/blog/20230131-mentorship-proposal/</link>
      <pubDate>Mon, 12 Dec 2022 12:12:12 -0800</pubDate>
      
      <guid>https://blog.mattblair.co/blog/20230131-mentorship-proposal/</guid>
      <description>Note: This is a compliment to the previous article I wrote about the Technical state of a Team, and explains the concepts in depth.
Technical State of the Team There’s a saying that people don’t leave companies, they leave managers. Management is a key part of any organization, yet the discipline is often self-taught and unstructured. Getting to the good solutions for complex management challenges can make the difference between fulfillment and frustration for teams, and, ultimately, between the success and failure of companies.</description>
    </item>
    
    <item>
      <title>Project Planning Checklist</title>
      <link>https://blog.mattblair.co/blog/20221110-project-planning-checklist/</link>
      <pubDate>Thu, 10 Nov 2022 05:17:17 -0800</pubDate>
      
      <guid>https://blog.mattblair.co/blog/20221110-project-planning-checklist/</guid>
      <description>All the previous project planning articles summarized into a checklist.
Project Planning Checklist Pre-Planning  Identity your stakeholders Identity the goal you’re trying to accomplish Get familiar with the code Set up a local environment to try things out  Beginning to Plan  Identify the rough scope of the work Identify the milestones of the project  Project Kickoff  High-Level Timelines  Call out timelines you haven’t figured out yet, and when you will figure them out   Identify Roles and Responsibilities of people involved with the project Identify Dependencies on other teams  Lay out the requirements for what you need from others to be successful   Identify Goals and Outcomes for the project Identify how you want people to work together on the project Identify next steps after the kickoff is complete  Overall Technical Design  An overview of the problem A breakdown of the individual milestones and how they’re related High-level process / workflow diagrams / designs / etc Any other notes that might be relevant to folks who will be working on the project  Breaking Down the Project into Milestones  Are the milestones clear on what they’re delivering?</description>
    </item>
    
    <item>
      <title>Running Your Projects</title>
      <link>https://blog.mattblair.co/blog/20221008-running-your-project/</link>
      <pubDate>Sat, 08 Oct 2022 05:17:17 -0800</pubDate>
      
      <guid>https://blog.mattblair.co/blog/20221008-running-your-project/</guid>
      <description>Note: This is a series of project planning talks I gave my team.
Running your project Writing A Technical Design Document At this point, you’re ready to start designing your system.
A good technical design document should contain:
 An overview of the problem A breakdown of the individual milestones and how they’re related High-level process / workflow diagrams / designs / etc Any other notes that might be relevant to folks who will be working on the project  You should also consider if certain steps can be done in parallel, and what steps block other aspects of the work.</description>
    </item>
    
    <item>
      <title>Kickoff Doc Expanded</title>
      <link>https://blog.mattblair.co/blog/20220907-kickoff-docs-expanded/</link>
      <pubDate>Wed, 07 Sep 2022 05:17:17 -0800</pubDate>
      
      <guid>https://blog.mattblair.co/blog/20220907-kickoff-docs-expanded/</guid>
      <description>Note: this is an expansion on a previous article I wrote around kickoff docs.
Project Kickoff! At this point, you should have a good idea of what your overall goal is. You should have a rough sketch of what your milestones are for the project and what you want to include in each one. You should not have the specific details of the projects worked out yet.
It’s time for a project kickoff.</description>
    </item>
    
    <item>
      <title>So you’ve got yourself a project</title>
      <link>https://blog.mattblair.co/blog/20220806-so-you-have-project/</link>
      <pubDate>Sat, 06 Aug 2022 05:17:17 -0800</pubDate>
      
      <guid>https://blog.mattblair.co/blog/20220806-so-you-have-project/</guid>
      <description>Note: This is a series of project planning talks I gave my team.
So you’ve got yourself a project A project (and a ticket) is a placeholder for a conversation. No matter if a ticket is super detailed or vague on what it wants, the best way to do good work is to figure out a few things about the work you’ve been given.
Get Comfortable Pre-planning for any project should begin FAR before the actual work.</description>
    </item>
    
    <item>
      <title>When to plan a project</title>
      <link>https://blog.mattblair.co/blog/20220705-project-planning-overview/</link>
      <pubDate>Tue, 05 Jul 2022 05:17:17 -0800</pubDate>
      
      <guid>https://blog.mattblair.co/blog/20220705-project-planning-overview/</guid>
      <description>Note: This is a series of project planning talks I gave my team.
When to plan a project What is a project plan? Project planning is the process of defining your objectives and scope, your goals and milestones (deliverables), and assigning tasks and resources for each step. A good plan is easily shareable with everyone involved, and it’s most useful when it’s revisited regularly. Simply outlining a plan and never discussing it with your team again is a good recipe for wasted time and effort.</description>
    </item>
    
  </channel>
</rss>

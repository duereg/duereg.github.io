<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Testing on A Place for Poor Examples</title>
    <link>https://blog.mattblair.co/tags/testing/</link>
    <description>Recent content in Testing on A Place for Poor Examples</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 04 Dec 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.mattblair.co/tags/testing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Code coverage for CoffeeScript and JavaScript without pre-compiling</title>
      <link>https://blog.mattblair.co/blog/20141204-gulp-coffee-istanbul/</link>
      <pubDate>Thu, 04 Dec 2014 00:00:00 +0000</pubDate>
      <guid>https://blog.mattblair.co/blog/20141204-gulp-coffee-istanbul/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;re not aware of your code coverage when building a serious application, you&amp;rsquo;re not building a serious app.&lt;/p&gt;&#xA;&lt;p&gt;So I love &lt;a href=&#34;https://github.com/gotwarlost/istanbul&#34;&gt;istanbul&lt;/a&gt; and &lt;a href=&#34;https://github.com/SBoudrias/gulp-istanbul&#34;&gt;gulp-istanbul&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;One problem - you have to compile your CoffeeScript, then point you tests at the compiled assets to get coverage metrics.&lt;/p&gt;&#xA;&lt;p&gt;Not anymore. Introducing &lt;a href=&#34;https://github.com/duereg/gulp-coffee-istanbul&#34;&gt;gulp-coffee-istanbul&lt;/a&gt;. This allows in place CoffeeScript test coverage.&lt;/p&gt;&#xA;&lt;p&gt;Have tests in coffee? Great. Have tests in JS? Great too. Same with your dependencies - it&amp;rsquo;ll take both, in place, and run coverage.&lt;/p&gt;</description>
    </item>
    <item>
      <title>It took pivotal 3 years to close a pull request</title>
      <link>https://blog.mattblair.co/blog/20141013-jasmine-node-before-all-after-all/</link>
      <pubDate>Mon, 13 Oct 2014 00:00:00 +0000</pubDate>
      <guid>https://blog.mattblair.co/blog/20141013-jasmine-node-before-all-after-all/</guid>
      <description>&lt;p&gt;On Feb 9, 2011, Fat (Jacob Thornton, one of the creators on &lt;a href=&#34;http://getbootstrap.com/&#34;&gt;Bootstrap&lt;/a&gt;) opened a &lt;a href=&#34;https://github.com/pivotal/jasmine/pull/56&#34;&gt;pull request&lt;/a&gt; to add beforeAll and afterAll statements to the &lt;a href=&#34;https://github.com/pivotal/jasmine&#34;&gt;jasmine&lt;/a&gt; library.&lt;/p&gt;&#xA;&lt;p&gt;Pivotal, at the time, thought that they were just about to implement:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://cl.ly/64PF/Screen%20shot%202011-04-17%20at%2011.18.55%20PM.png&#34; alt=&#34;Snapshot of a tweet where Pivotal tells @Fat that theyâ€™re about to implement beforeAll and afterAll&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;That tweet was from December 2010.&lt;/p&gt;&#xA;&lt;p&gt;Since then, a couple people have come up with &lt;a href=&#34;https://github.com/nonplus/jasmine-beforeAll&#34;&gt;workarounds&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;And now, over three years later, pivotal is about to release &lt;a href=&#34;https://github.com/pivotal/jasmine/pull/56#issuecomment-56873541&#34;&gt;beforeAll/afterAll&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A/B Testing and Random Selection</title>
      <link>https://blog.mattblair.co/blog/20131211-a-b-testing-and-random-selection/</link>
      <pubDate>Wed, 11 Dec 2013 00:00:00 +0000</pubDate>
      <guid>https://blog.mattblair.co/blog/20131211-a-b-testing-and-random-selection/</guid>
      <description>&lt;p&gt;Are you looking for an A/B framework? Something you can use in the browser to toggle a user experience - do they see marketing promotion #1, or a picture of a cat?&lt;/p&gt;&#xA;&lt;p&gt;Or are you interested in random selection - you want to send our 5000 emails of differing types, and see how users respond?&lt;/p&gt;&#xA;&lt;p&gt;Either way, enter &lt;a href=&#34;http://www.github.com/goodeggs/laboratory&#34;&gt;laboratory&lt;/a&gt;. A simple framework that allows random selection or A/B testing. With the added bonus of being usable anywhere you can load JavaScript.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

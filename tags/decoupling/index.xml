<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Decoupling on A Place for Poor Examples</title>
    <link>https://blog.mattblair.co/tags/decoupling/</link>
    <description>Recent content in Decoupling on A Place for Poor Examples</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 10 Sep 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.mattblair.co/tags/decoupling/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Move your Open Source work to Node 4</title>
      <link>https://blog.mattblair.co/blog/20150910-upgrade-travis-and-os-for-node-4/</link>
      <pubDate>Thu, 10 Sep 2015 00:00:00 +0000</pubDate>
      <guid>https://blog.mattblair.co/blog/20150910-upgrade-travis-and-os-for-node-4/</guid>
      <description>&lt;p&gt;Now that &lt;a href=&#34;https://nodejs.org/en/blog/release/v4.0.0/&#34;&gt;Node 4 has been released&lt;/a&gt;, isn&amp;rsquo;t it time you upgraded your OS (Open Source) projects to use it?&lt;/p&gt;&#xA;&lt;h2 id=&#34;step-1---packagejson&#34;&gt;Step 1 - package.json&lt;/h2&gt;&#xA;&lt;p&gt;If you&amp;rsquo;re not already using it, the &lt;a href=&#34;https://docs.npmjs.com/files/package.json#engines&#34;&gt;engines&lt;/a&gt; field in your &lt;code&gt;package.json&lt;/code&gt; allows you to specify what version of node you designed your package to run on. The &lt;code&gt;engines&lt;/code&gt; field is not strict - you can&amp;rsquo;t force your consumers to use a preferred engine, but you can warn them if your package uses features that aren&amp;rsquo;t available in all version of node.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The (0, func) operation in transpiled code</title>
      <link>https://blog.mattblair.co/blog/20150420-0-func-operator-and-decoupling/</link>
      <pubDate>Mon, 20 Apr 2015 00:00:00 +0000</pubDate>
      <guid>https://blog.mattblair.co/blog/20150420-0-func-operator-and-decoupling/</guid>
      <description>&lt;p&gt;Was looking at some decompiled code from ES6 the other day, when I saw a line that looked like this:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var x = (0, anObject.aFunc)(params);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;WTF? I had never seen syntax like this before in JavaScript. Time to dig into the docs.&lt;/p&gt;&#xA;&lt;p&gt;Paraphrasing from Mozilla and StackOverflow:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;When you write expressions separated by a comma (,) JavaScript evaluates all the expressions in order and returns the value of the last expression.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

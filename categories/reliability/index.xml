<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>reliability on A Place for Poor Examples</title>
    <link>https://blog.mattblair.co/categories/reliability/</link>
    <description>Recent content in reliability on A Place for Poor Examples</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 25 Dec 2024 00:00:00 -0700</lastBuildDate>
    
	<atom:link href="https://blog.mattblair.co/categories/reliability/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Blameless Postmortems: Turning Failures into Learning</title>
      <link>https://blog.mattblair.co/blog/20241225-blameless-post-mortems/</link>
      <pubDate>Wed, 25 Dec 2024 00:00:00 -0700</pubDate>
      
      <guid>https://blog.mattblair.co/blog/20241225-blameless-post-mortems/</guid>
      <description>Blameless Postmortems: Turning Failures into Learning When something breaks in production—maybe a server crashes or a deployment goes sideways—it’s tempting to point fingers and hunt for the person “at fault.” But that only breeds fear and discourages honest discussion. A blameless postmortem flips the script: it treats every outage as a chance to learn how our systems and processes can improve, rather than a moment for shame.
Why “Blameless” Matters In a blameless culture, people feel safe admitting mistakes, asking questions, and sharing every detail of what happened without worrying about repercussions.</description>
    </item>
    
  </channel>
</rss>